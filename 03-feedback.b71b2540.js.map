{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,sBACtCC,EAAQF,SAASC,cAAc,uBAC/BE,EAAUH,SAASC,cAAc,4BACjCG,EAASJ,SAASC,cAAc,yBAEhCI,EAAoBC,aAAaC,QAAQ,uBAC3CC,KAAKC,MAAMH,aAAaC,QAAQ,wBAChC,GA+BEF,EAAkBK,QACpBR,EAAMS,MAAQN,EAAkBK,OAE9BL,EAAkBO,UACpBT,EAAQQ,MAAQN,EAAkBO,SAMtCb,EAAac,iBAAiB,QAASC,EAAAjB,GAAEkB,UAnCpB,WACnB,IAEMC,EAAQ,CAAEN,MAFGR,EAAMS,MAEUC,QADdT,EAAQQ,OAG7BL,aAAaW,QAAQ,sBAAuBT,KAAKU,UAAUF,G,GA8BG,MAChEZ,EAAOS,iBAAiB,SAzBF,SAAAM,GACpBA,EAAMC,iBACN,IAAMC,EAAW,CAAEX,MAAOR,EAAMS,MAAOC,QAAST,EAAQQ,OACxDW,QAAQC,IAAIF,GAEZnB,EAAMS,MAAQ,GACdR,EAAQQ,MAAQ,GAChBL,aAAakB,WAAW,sB","sources":["src/js/03-feedback.js"],"sourcesContent":["import _ from 'lodash';\n\nconst feedbackForm = document.querySelector('form.feedback-form');\nconst email = document.querySelector('input[name=\"email\"]');\nconst message = document.querySelector('textarea[name=\"message\"]');\nconst button = document.querySelector('button[type=\"submit\"]');\n\nconst feedbackFormState = localStorage.getItem('feedback-form-state')\n  ? JSON.parse(localStorage.getItem('feedback-form-state'))\n  : '';\n\n//Śledź w formularzu zdarzenie input,\n//i za każdym razem zapisuj w local storage obiekt z polami email i message,\n//w których przechowuj aktualne wartości pól formularza.\n//Niech kluczem do storage będzie \"feedback-form-state\"\nconst inputHandler = () => {\n  const emailState = email.value;\n  const messageState = message.value;\n  const state = { email: emailState, message: messageState };\n\n  localStorage.setItem('feedback-form-state', JSON.stringify(state));\n};\n\n//Po wysłaniu formularza wyczyść storage i pola formularza,\n//a także wprowadź obiekt z polami email, message\n//i ich aktualnymi wartościami do wiersza poleceń.\nconst submitHandler = event => {\n  event.preventDefault();\n  const sendData = { email: email.value, message: message.value };\n  console.log(sendData);\n\n  email.value = '';\n  message.value = '';\n  localStorage.removeItem('feedback-form-state');\n};\n\n//Podczas przeładowywania strony sprawdzaj stan storage\n//i jeśli są tam zapisane dane, wypełniaj nimi pola formularza.\n//W przeciwnym wypadku pola powinny być puste.\nconst checkStorage = () => {\n  if (feedbackFormState.email) {\n    email.value = feedbackFormState.email;\n  }\n  if (feedbackFormState.message) {\n    message.value = feedbackFormState.message;\n  }\n};\n\ncheckStorage();\n//Zrób tak, aby storage aktualizował się nie częściej niż raz na 500 milisekund.\nfeedbackForm.addEventListener('input', _.throttle(inputHandler, 500));\nbutton.addEventListener('click', submitHandler);\n"],"names":["$1WSnx","parcelRequire","$b00c40859be242c5$var$feedbackForm","document","querySelector","$b00c40859be242c5$var$email","$b00c40859be242c5$var$message","$b00c40859be242c5$var$button","$b00c40859be242c5$var$feedbackFormState","localStorage","getItem","JSON","parse","email","value","message","addEventListener","$parcel$interopDefault","throttle","state","setItem","stringify","event","preventDefault","sendData","console","log","removeItem"],"version":3,"file":"03-feedback.b71b2540.js.map"}